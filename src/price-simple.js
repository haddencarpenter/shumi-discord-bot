import axios from 'axios';

// Comprehensive ticker mapping - manually curated for reliability
const TICKER_MAP = {
  // Major coins
  'btc': 'bitcoin',
  'eth': 'ethereum',
  'bnb': 'binancecoin', 
  'xrp': 'ripple',
  'ada': 'cardano',
  'sol': 'solana',
  'dot': 'polkadot',
  'doge': 'dogecoin',
  'avax': 'avalanche-2',
  'matic': 'matic-network',
  'link': 'chainlink',
  'uni': 'uniswap',
  'ltc': 'litecoin',
  'atom': 'cosmos',
  'etc': 'ethereum-classic',
  'xlm': 'stellar',
  'bch': 'bitcoin-cash',
  'fil': 'filecoin',
  'trx': 'tron',
  'vet': 'vechain',
  'icp': 'internet-computer',
  'theta': 'theta-token',
  'ftm': 'fantom',
  'algo': 'algorand',
  'xmr': 'monero',
  'egld': 'multiversx-elrond-egld',
  'aave': 'aave',
  'eos': 'eos',
  'axs': 'axie-infinity',
  'mkr': 'maker',
  'kcs': 'kucoin-shares',
  'hbar': 'hedera-hashgraph',
  'flow': 'flow',
  'iota': 'iota',
  'xtz': 'tezos',
  'bsv': 'bitcoin-cash-sv',
  'neo': 'neo',
  'kda': 'kadena',
  'mina': 'mina-protocol',
  'rune': 'thorchain',
  'qnt': 'quant-network',
  'gala': 'gala',
  'chz': 'chiliz',
  'sand': 'the-sandbox',
  'mana': 'decentraland',
  'cro': 'crypto-com-chain',
  'lrc': 'loopring',
  'bat': 'basic-attention-token',
  'zec': 'zcash',
  'enj': 'enjincoin',
  'omg': 'omisego',
  'sushi': 'sushi',
  'comp': 'compound-governance-token',
  'snx': 'havven',
  'yfi': 'yearn-finance',
  'uma': 'uma',
  '1inch': '1inch',
  'crv': 'curve-dao-token',
  'ren': 'republic-protocol',
  'knc': 'kyber-network-crystal',
  'zrx': '0x',
  'storj': 'storj',
  'bal': 'balancer',
  'nmr': 'numeraire',
  'lpt': 'livepeer',
  
  // Meme coins
  'shib': 'shiba-inu',
  'pepe': 'pepe',
  'floki': 'floki',
  'doge': 'dogecoin',
  'bonk': 'bonk',
  'wif': 'dogwifcoin',
  'popcat': 'popcat',
  'mew': 'cat-in-a-dogs-world',
  'neiro': 'first-neiro-on-ethereum',
  'pnut': 'peanut-the-squirrel',
  'goat': 'goatseus-maximus',
  'act': 'achain',
  'turbo': 'turbo',
  'mog': 'mog-coin',
  'brett': 'based-brett',
  'wojak': 'wojak',
  'pepe2': 'pepe-2-0',
  'slerf': 'slerf',
  'bome': 'book-of-meme',
  'wen': 'wen-4',
  'billy': 'billy',
  'ponke': 'ponke',
  'higher': 'higher',
  'mother': 'mother-iggy',
  'daddy': 'daddy-tate',
  'virtual': 'virtuals-protocol',
  'ai16z': 'ai16z',
  'zerebro': 'zerebro',
  'fartcoin': 'fartcoin',
  'chillguy': 'just-a-chill-guy',
  'ban': 'banana-gun',
  'luce': 'luce',
  'chud': 'chud',
  'sigma': 'sigma',
  'pork': 'pork',
  'retardio': 'retardio',
  'eliza': 'elizas-world',
  'griffain': 'griffain',
  'pengu': 'pudgy-penguins',
  'pnut': 'peanut-the-squirrel',
  'ai16z': 'ai16z',
  
  // DeFi tokens
  'cake': 'pancakeswap-token',
  'dydx': 'dydx',
  'gmx': 'gmx',
  'joe': 'trader-joe',
  'png': 'pangolin',
  'quick': 'quickswap',
  'alpha': 'alpha-finance',
  'spell': 'spell-token',
  'ohm': 'olympus',
  'fxs': 'frax-share',
  'cvx': 'convex-finance',
  'badger': 'badger-dao',
  'fox': 'shapeshift-fox-token',
  'alcx': 'alchemix',
  'mim': 'magic-internet-money',
  'frax': 'frax',
  'lusd': 'liquity-usd',
  'rai': 'rai',
  'ray': 'raydium',
  'orca': 'orca',
  'srm': 'serum',
  'mngo': 'mango-markets',
  'slnd': 'solend',
  'jet': 'jet-protocol',
  'sunny': 'sunny-aggregator',
  'sbr': 'saber',
  'mer': 'mercurial',
  'port': 'port-finance',
  'tulip': 'tulip-protocol',
  'larix': 'larix',
  'slim': 'solanium',
  'mean': 'mean-finance',
  'hub': 'hubble',
  
  // Top altcoins  
  'rpl': 'rocket-pool',
  'arc': 'arc-governance-old',
  'inj': 'injective-protocol',
  'sui': 'sui',
  'apt': 'aptos',
  'arb': 'arbitrum',
  'op': 'optimism',
  'imx': 'immutable-x',
  'stx': 'stacks',
  'near': 'near',
  'rose': 'oasis-network',
  'one': 'harmony',
  'celo': 'celo',
  'waves': 'waves',
  'qtum': 'qtum',
  'zil': 'zilliqa',
  'icx': 'icon',
  'ont': 'ontology',
  'rvn': 'ravencoin',
  'dcr': 'decred',
  'dash': 'dash',
  'xem': 'nem',
  'nano': 'nano',
  'sc': 'siacoin',
  'zen': 'horizen',
  'btg': 'bitcoin-gold',
  'dgb': 'digibyte',
  'lsk': 'lisk',
  'ardr': 'ardor',
  'kmd': 'komodo',
  'pivx': 'pivx',
  'dent': 'dent',
  'elf': 'aelf',
  'wan': 'wanchain',
  'ark': 'ark',
  'nuls': 'nuls',
  'gnt': 'golem',
  'powr': 'power-ledger',
  'req': 'request-network',
  'salt': 'salt',
  'sub': 'substratum',
  'knc': 'kyber-network-crystal',
  'pay': 'tenx',
  'mco': 'monaco',
  'bnt': 'bancor',
  'gno': 'gnosis',
  'wings': 'wings',
  'time': 'chronobank',
  'sngls': 'singulardtv',
  '1st': 'firstblood',
  'hmq': 'humaniq',
  'xel': 'elastic',
  'lun': 'lunyr',
  'taas': 'taas',
  'dice': 'etheroll',
  'vsl': 'vslice',
  'trst': 'wetrust',
  'wings': 'wings',
  'tkn': 'tokencard',
  'rlc': 'iexec-rlc',
  'ant': 'aragon',
  'bat': 'basic-attention-token',
  'snt': 'status',
  'cvc': 'civic',
  'mtl': 'metal',
  'fun': 'funfair',
  'dnr': 'denarius',
  'zrx': '0x',
  'omg': 'omisego',
  'storj': 'storj',
  'pay': 'tenx',
  'adx': 'adx-net',
  'mcap': 'mcap',
  'cfi': 'cofound-it',
  'bqx': 'bitquence',
  'snm': 'sonm',
  'ppt': 'populous',
  'dnt': 'district0x',
  'adt': 'adtoken',
  'rcn': 'ripio-credit-network',
  'myst': 'mysterium',
  'eng': 'enigma',
  'salt': 'salt',
  'oax': 'oax',
  'san': 'santiment-network-token',
  'ppy': 'peerplays',
  'omni': 'omni',
  'block': 'blocknet',
  'pivx': 'pivx',
  'part': 'particl',
  'fair': 'faircoin',
  'game': 'gamecredits',
  'lbc': 'lbry-credits',
  'sys': 'syscoin',
  'via': 'viacoin',
  'vtc': 'vertcoin',
  'blk': 'blackcoin',
  'bay': 'bitbay',
  'nxt': 'nxt',
  'burst': 'burst',
  'xcp': 'counterparty',
  'nmc': 'namecoin',
  'ppc': 'peercoin',
  'nvc': 'novacoin',
  'ftc': 'feathercoin',
  'mnc': 'mincoin',
  'wdc': 'worldcoin',
  'dgc': 'digitalcoin',
  'arg': 'argentum',
  'net': 'netcoin',
  'gld': 'goldcoin',
  'tag': 'tagcoin',
  'mec': 'megacoin',
  'ezc': 'ezcoin',
  'dmd': 'diamond',
  'grs': 'groestlcoin',
  'cloak': 'cloakcoin',
  'start': 'startcoin',
  'kore': 'korecoin',
  'xdn': 'digitalnote',
  'trust': 'trustplus',
  'nav': 'nav-coin',
  'xst': 'stealth',
  'via': 'viacoin',
  'pink': 'pinkcoin',
  'iop': 'internet-of-people',
  'gbyte': 'byteball',
  'sib': 'sibcoin',
  'zcl': 'zclassic',
  'zen': 'horizen',
  'btcp': 'bitcoin-private',
  'btcz': 'bitcoinz',
  'hush': 'hush',
  'kmd': 'komodo',
  'zcash': 'zcash',
  'xzc': 'zcoin',
  'pivx': 'pivx'
};

export async function fetchUsdPrice(ticker) {
  const priceData = await fetchCoinData(ticker);
  return priceData.price;
}

export async function fetchCoinData(ticker) {
  const input = ticker.toLowerCase().trim();
  
  // Handle stablecoins at fixed $1.00
  if (input === 'usdt' || input === 'usdc') {
    return {
      price: 1.0,
      change24h: 0,
      marketCap: null
    };
  }
  
  // Get coin ID from mapping, fallback to input
  const coinId = TICKER_MAP[input] || input;
  
  try {
    const q = encodeURIComponent(coinId);
    // Free API includes 24h change and market cap!
    const { data } = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${q}&vs_currencies=usd&include_24hr_change=true&include_market_cap=true`, { 
      timeout: 5000
    });
    
    const k = Object.keys(data)[0];
    if (!k || data[k]?.usd == null) {
      throw new Error(`price not found for ${ticker}`);
    }
    
    const coin = data[k];
    return {
      price: Number(coin.usd),
      change24h: Number(coin.usd_24h_change || 0),
      marketCap: coin.usd_market_cap ? Number(coin.usd_market_cap) : null
    };
  } catch (error) {
    // If mapping failed, try raw input as backup
    if (coinId !== input) {
      try {
        const q = encodeURIComponent(input);
        const { data } = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${q}&vs_currencies=usd&include_24hr_change=true&include_market_cap=true`, { 
          timeout: 3000 
        });
        const k = Object.keys(data)[0];
        if (k && data[k]?.usd != null) {
          const coin = data[k];
          return {
            price: Number(coin.usd),
            change24h: Number(coin.usd_24h_change || 0),
            marketCap: coin.usd_market_cap ? Number(coin.usd_market_cap) : null
          };
        }
      } catch {}
    }
    throw new Error(`price not found for ${ticker}`);
  }
}